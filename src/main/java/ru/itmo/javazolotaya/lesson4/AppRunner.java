package ru.itmo.javazolotaya.lesson4;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.ConfigurableApplicationContext;
import ru.itmo.javazolotaya.lesson4.model.City;
import ru.itmo.javazolotaya.lesson4.service.CityService;

import java.util.Scanner;

@SpringBootApplication
public class AppRunner {
    public static void main(String[] args) {

        ConfigurableApplicationContext context =
                SpringApplication.run(AppRunner.class, args);

        CityService service = context.getBean(CityService.class);

        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("\n=== –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ===");
            System.out.println("1. –î–æ–±–∞–≤–∏—Ç—å –≥–æ—Ä–æ–¥");
            System.out.println("2. –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –≥–æ—Ä–æ–¥–∞");
            System.out.println("3. –ù–∞–π—Ç–∏ –≥–æ—Ä–æ–¥ –ø–æ ID");
            System.out.println("4. –û–±–Ω–æ–≤–∏—Ç—å –≥–æ—Ä–æ–¥");
            System.out.println("5. –£–¥–∞–ª–∏—Ç—å –≥–æ—Ä–æ–¥");
            System.out.println("6. –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –≥–æ—Ä–æ–¥–∞");
            System.out.println("0. –í—ã—Ö–æ–¥");
            System.out.print("–í—ã–±–æ—Ä: ");
            int choice = scanner.nextInt();
            scanner.nextLine();

            switch (choice) {
                case 1 -> {
                    System.out.print("–ù–∞–∑–≤–∞–Ω–∏–µ (RU): ");
                    String ru = scanner.nextLine();
                    System.out.print("–ù–∞–∑–≤–∞–Ω–∏–µ (EN): ");
                    String en = scanner.nextLine();
                    System.out.print("–ù–∞—Å–µ–ª–µ–Ω–∏–µ: ");
                    int pop = scanner.nextInt();
                    scanner.nextLine();

                    City city = City.builder()
                            .nameRu(ru)
                            .nameEn(en)
                            .population(pop)
                            .build();

                    service.addCity(city);

                    System.out.println("–ì–æ—Ä–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω. –¢–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫:");
                    service.getAllCities().forEach(System.out::println);
                }
                case 2 -> service.getAllCities().forEach(System.out::println);
                case 3 -> {
                    System.out.print("–í–≤–µ–¥–∏—Ç–µ ID: ");
                    int id = scanner.nextInt();
                    System.out.println(service.getCity(id));
                }
                case 4 -> {
                    System.out.print("ID –≥–æ—Ä–æ–¥–∞: ");
                    int id = scanner.nextInt();
                    scanner.nextLine();
                    System.out.print("–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ (RU): ");
                    String ru = scanner.nextLine();
                    System.out.print("–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ (EN): ");
                    String en = scanner.nextLine();
                    System.out.print("–ù–æ–≤–æ–µ –Ω–∞—Å–µ–ª–µ–Ω–∏–µ: ");
                    int pop = scanner.nextInt();
                    scanner.nextLine();
                    service.updateCity(new City(id, ru, en, pop));
                    System.out.println("–ì–æ—Ä–æ–¥ –æ–±–Ω–æ–≤–ª—ë–Ω. –¢–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫:");
                    service.getAllCities().forEach(System.out::println);

                }
                case 5 -> {
                    System.out.print("–í–≤–µ–¥–∏—Ç–µ ID: ");
                    int id = scanner.nextInt();
                    service.deleteCity(id);
                    System.out.println("–ì–æ—Ä–æ–¥ —É–¥–∞–ª—ë–Ω. –¢–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫:");
                    service.getAllCities().forEach(System.out::println);
                }
                case 6 -> {
                    System.out.print("‚ö† –í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –≥–æ—Ä–æ–¥–∞? (y/n): ");
                    String confirm = scanner.nextLine();
                    if (confirm.equalsIgnoreCase("y")) {
                        service.deleteAllCities();
                        System.out.println("üóë –í—Å–µ –≥–æ—Ä–æ–¥–∞ —É–¥–∞–ª–µ–Ω—ã. –¢–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫:");
                        service.getAllCities().forEach(System.out::println);
                    } else {
                        System.out.println("–û—Ç–º–µ–Ω–∞ —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö –≥–æ—Ä–æ–¥–æ–≤.");
                    }
                }
                case 0 -> {
                    System.out.println("–í—ã—Ö–æ–¥...");
                    System.exit(0);
                }
                default -> System.out.println("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä");
            }
        }
    }
}